# ===============================
# = SERVER
# ===============================
server.port=8085

# ===============================
# = DATA SOURCE
# ===============================
#Database
spring.datasource.url = jdbc:mysql://localhost:3306/db_name?useSSL=false

#JPA 
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.id.new_generator_mappings=false
#spring.jpa.hibernate.ddl-auto=upate
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Username and password
spring.datasource.username = root
spring.datasource.password = 

#mysql
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# I18N configuration
spring.messages.basename=messages
spring.messages.encoding=UTF-8


# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1


# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always


# ==============================================================
# = Logger
# ==============================================================
spring.output.ansi.enabled=ALWAYS
logging.level.org.springframework=DEBUG
logging.level.com.nr.health.healthinstructor=DEBUG,INFO
logging.file=c:/Temp/application.log
logging.pattern.console={"timestamp":"%d{yyyy-MM-dd HH:mm:ss}",%msg} %n
logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} - %msg%n
#logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%

